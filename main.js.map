{"version":3,"file":"main.js","mappings":"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","sources":["webpack://engr180w-checker/./src/index.css","webpack://engr180w-checker/./src/index.css?0538","webpack://engr180w-checker/./src/AnnotatedText.tsx","webpack://engr180w-checker/./src/App.tsx","webpack://engr180w-checker/./src/BannedWords.ts","webpack://engr180w-checker/./src/Editor.tsx","webpack://engr180w-checker/./src/Issue.tsx","webpack://engr180w-checker/./src/main.tsx","webpack://engr180w-checker/./src/util/MouseTooltip.tsx"],"sourcesContent":["// Imports\nimport ___CSS_LOADER_API_SOURCEMAP_IMPORT___ from \"../node_modules/css-loader/dist/runtime/sourceMaps.js\";\nimport ___CSS_LOADER_API_IMPORT___ from \"../node_modules/css-loader/dist/runtime/api.js\";\nvar ___CSS_LOADER_EXPORT___ = ___CSS_LOADER_API_IMPORT___(___CSS_LOADER_API_SOURCEMAP_IMPORT___);\n// Module\n___CSS_LOADER_EXPORT___.push([module.id, `@tailwind base;\n@tailwind components;\n@tailwind utilities;\n`, \"\",{\"version\":3,\"sources\":[\"webpack://./src/index.css\"],\"names\":[],\"mappings\":\"AAAA,cAAc;AACd,oBAAoB;AACpB,mBAAmB\",\"sourcesContent\":[\"@tailwind base;\\n@tailwind components;\\n@tailwind utilities;\\n\"],\"sourceRoot\":\"\"}]);\n// Exports\nexport default ___CSS_LOADER_EXPORT___;\n","\n      import API from \"!../node_modules/style-loader/dist/runtime/injectStylesIntoStyleTag.js\";\n      import domAPI from \"!../node_modules/style-loader/dist/runtime/styleDomAPI.js\";\n      import insertFn from \"!../node_modules/style-loader/dist/runtime/insertBySelector.js\";\n      import setAttributes from \"!../node_modules/style-loader/dist/runtime/setAttributesWithoutAttributes.js\";\n      import insertStyleElement from \"!../node_modules/style-loader/dist/runtime/insertStyleElement.js\";\n      import styleTagTransformFn from \"!../node_modules/style-loader/dist/runtime/styleTagTransform.js\";\n      import content, * as namedExport from \"!!../node_modules/css-loader/dist/cjs.js!../node_modules/postcss-loader/dist/cjs.js!./index.css\";\n      \n      \n\nvar options = {};\n\noptions.styleTagTransform = styleTagTransformFn;\noptions.setAttributes = setAttributes;\n\n      options.insert = insertFn.bind(null, \"head\");\n    \noptions.domAPI = domAPI;\noptions.insertStyleElement = insertStyleElement;\n\nvar update = API(content, options);\n\n\n\nexport * from \"!!../node_modules/css-loader/dist/cjs.js!../node_modules/postcss-loader/dist/cjs.js!./index.css\";\n       export default content && content.locals ? content.locals : undefined;\n","import React, { useEffect, useState } from \"react\";\nimport MouseTooltip from \"./util/MouseTooltip\";\nimport writeGood from \"write-good\";\nimport { Issue } from \"./Issue\";\nimport { syllable } from \"syllable\";\nimport { WORD_BAN_LIST } from \"./BannedWords\";\nfunction AnnotatedText({ text }) {\n    const WhitespaceRegex = /\\s/g;\n    const [mouseIndex, setMouseIndex] = useState(-1);\n    const [suggestions, setSuggestions] = useState([]);\n    const [issueCount, setIssueCount] = useState([]);\n    useEffect(() => {\n        const suggestions = writeGood(text);\n        function addSuggestion(index, offset, reason) {\n            suggestions.push({\n                index,\n                offset,\n                reason,\n            });\n        }\n        const paragraphRegex = /\\n[^\\n]+|[^\\n]+\\n|([^\\n]+$)/gi;\n        let match;\n        while ((match = paragraphRegex.exec(text))) {\n            const paragraph = match[0];\n            const paragraphStart = match.index;\n            // suggestions.push({\n            //   index: match.index,\n            //   offset: match[0].length,\n            //   reason: \"this is a paragraph\",\n            // });\n            const sentenceRegex = /[^.]+./gi;\n            while ((match = sentenceRegex.exec(paragraph))) {\n                const sentence = match[0];\n                const sentenceStart = match.index + paragraphStart;\n                const sentenceOffset = sentence.length;\n                // console.log(sentence, sentence.split(\" \").length);\n                const wordCount = sentence.split(\" \").length;\n                if (wordCount > 20) {\n                    // prettier-ignore\n                    addSuggestion(sentenceStart, sentenceOffset, `Long sentence! Words = ${wordCount}, Expected <= 20`);\n                }\n                if (wordCount > 25) {\n                    // prettier-ignore\n                    addSuggestion(sentenceStart, sentenceOffset, `Very long sentence! Words = ${wordCount}, Expected <= 25`);\n                }\n                const wordRegex = / [^ ]+|[^ ]+ /gi;\n                while ((match = wordRegex.exec(sentence))) {\n                    const word = match[0].trim();\n                    const wordStart = match.index + sentenceStart;\n                    const wordOffset = match[0].length;\n                    const syllables = syllable(word);\n                    if (syllables > 2) {\n                        // prettier-ignore\n                        addSuggestion(wordStart, wordOffset, `Long word! Syllables = ${syllables}, Expected <= 2`);\n                    }\n                    if (syllables > 3) {\n                        // prettier-ignore\n                        addSuggestion(wordStart, wordOffset, `Very long word! Syllables = ${syllables}, Expected <= 3`);\n                    }\n                    if (WORD_BAN_LIST[word]) {\n                        // prettier-ignore\n                        addSuggestion(wordStart, wordOffset, `\"${word}\": ${WORD_BAN_LIST[word]}`);\n                    }\n                }\n            }\n        }\n        const issueCount = [...new Array(text.length)].map(() => 0);\n        for (const { index, offset } of suggestions) {\n            for (let i = 0; i < offset; ++i) {\n                issueCount[index + i] += 1;\n            }\n        }\n        setSuggestions(suggestions);\n        setIssueCount(issueCount);\n    }, [text]);\n    function issueCountToColor(issues) {\n        if (issues >= 5)\n            return \"text-red-500\";\n        else {\n            return [\n                \"\",\n                \"text-yellow-500\",\n                \"text-yellow-800\",\n                \"text-orange-500\",\n                \"text-orange-800\",\n            ][issues];\n        }\n    }\n    return (React.createElement(\"div\", { className: 'flex flex-row w-full max-w-md flex-wrap font-mono' },\n        text.split(\"\").map((c, index) => (React.createElement(\"div\", { key: index, className: `${WhitespaceRegex.test(c) ? \"px-2\" : \"\"} ${issueCountToColor(issueCount[index])} ${index === mouseIndex ? \"bg-slate-500\" : \"\"}`, onMouseOver: () => setMouseIndex(index) }, c))),\n        React.createElement(MouseTooltip, { offsetY: 10 },\n            React.createElement(\"div\", { className: 'bg-white p-2 border border-black rounded-md text-black max-w-sm' }, suggestions.map(({ reason, index, offset }, suggestionIndex) => mouseIndex >= index &&\n                mouseIndex <= index + offset && (React.createElement(Issue, { label: '!', description: reason, key: suggestionIndex })))))));\n}\nexport default AnnotatedText;\n","import React from \"react\";\nimport Editor from \"./Editor\";\nfunction App() {\n    return (React.createElement(React.Fragment, null,\n        React.createElement(\"div\", null, \"Paste text\"),\n        React.createElement(Editor, null)));\n}\nexport default App;\n","export const WORD_BAN_LIST = {\n    will: \"future tense\",\n    had: \"past tense\",\n    has: \"past tense\",\n    was: \"past tense\",\n    by: \"passive voice?\",\n    being: \"passive voice?\",\n    gets: \"passive voice?\",\n};\n","import React, { useState } from \"react\";\nimport AnnotatedText from \"./AnnotatedText\";\nfunction Editor() {\n    const [content, setContent] = useState(\"The FitnessGram™ Pacer Test is a multistage aerobic capacity test that progressively gets more difficult as it continues. The 20 meter pacer test will begin in 30 seconds. Line up at the start. The running speed starts slowly, but gets faster each minute after you hear this signal. [beep] A single lap should be completed each time you hear this sound. [ding] Remember to run in a straight line, and run as long as possible. The second time you fail to complete a lap before the sound, your test is over. The test will begin on the word start. On your mark, get ready, start.\\n\");\n    return (React.createElement(\"div\", { className: 'm-4 flex flex-col items-center' },\n        React.createElement(\"textarea\", { onChange: (event) => setContent(event.target.value), placeholder: \"add text to check\", className: 'w-full border border-black' }),\n        React.createElement(\"div\", { className: 'p-4 m-4 rounded-lg bg-white border border-black/20 max-w-screen-md' },\n            React.createElement(AnnotatedText, { text: content }))));\n}\nexport default Editor;\n","import React, { useState } from \"react\";\nconst BG_COLORS = {\n    0: \"bg-yellow-100\",\n    1: \"bg-orange-100\",\n    2: \"bg-red-100\",\n    3: \"bg-red-100\",\n};\nfunction Issue({ label, description, severity = 0, key }) {\n    const [active, _setActive] = useState(true);\n    return (React.createElement(\"div\", { className: `flex flex-col p-1 rounded-sm ${active ? \"\" : \"opacity-50\"}`, key: key },\n        React.createElement(\"div\", { className: `font-semibold text-xl ${BG_COLORS[severity]}` }, label),\n        React.createElement(\"div\", null,\n            React.createElement(\"div\", { className: 'text-black/80 text-base' }, description))));\n}\nfunction IssueListing({ issues }) {\n    return (React.createElement(React.Fragment, null, issues.getIssues().map(({ label, description, severity }, index) => (React.createElement(Issue, { label: label, description: description, key: index, severity: severity })))));\n}\nexport default Issue;\nexport { Issue, IssueListing };\n","import React from \"react\";\nimport ReactDOM from \"react-dom/client\";\nimport App from \"./App\";\nimport \"./index.css\";\nReactDOM.createRoot(document.getElementById(\"root\")).render(React.createElement(React.StrictMode, null,\n    React.createElement(App, null)));\n","/**\n * https://github.com/marlo22/react-sticky-mouse-tooltip/blob/master/src/MouseTooltip.jsx\n * rewritten by chatgpt :^)\n * https://chat.openai.com/share/58dcf8fb-d1b7-4c18-8b33-449e026099d8\n */\nimport React, { useState, useEffect } from 'react';\nconst MouseTooltip = ({ visible = true, children, offsetX = 0, offsetY = 0, className, style, }) => {\n    const [tooltipPosition, setTooltipPosition] = useState({ xPosition: 0, yPosition: 0 });\n    const [mouseMoved, setMouseMoved] = useState(false);\n    const [listenerActive, setListenerActive] = useState(false);\n    const getTooltipPosition = ({ clientX, clientY }) => {\n        setTooltipPosition({\n            xPosition: clientX,\n            yPosition: clientY,\n        });\n        setMouseMoved(true);\n    };\n    const addListener = () => {\n        window.addEventListener('mousemove', getTooltipPosition);\n        setListenerActive(true);\n    };\n    const removeListener = () => {\n        window.removeEventListener('mousemove', getTooltipPosition);\n        setListenerActive(false);\n    };\n    const updateListener = () => {\n        if (!listenerActive && visible) {\n            addListener();\n        }\n        if (listenerActive && !visible) {\n            removeListener();\n        }\n    };\n    useEffect(() => {\n        addListener();\n        return () => {\n            removeListener();\n        };\n    }, []);\n    useEffect(() => {\n        updateListener();\n    }, [visible]);\n    return (React.createElement(\"div\", { className: className, style: {\n            display: visible && mouseMoved ? 'block' : 'none',\n            position: 'fixed',\n            top: tooltipPosition.yPosition + offsetY,\n            left: tooltipPosition.xPosition + offsetX,\n            ...style,\n        } }, children));\n};\nexport default MouseTooltip;\n"],"names":[],"sourceRoot":""}